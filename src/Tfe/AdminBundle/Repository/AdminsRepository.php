<?php

namespace Tfe\AdminBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;

/**
 * AdminsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdminsRepository extends \Doctrine\ORM\EntityRepository
{
    public function FindUsersAscAll()
    {
        /*$qb = $this->createQueryBuilder('a');
        $qb->orderBy('a.username', 'ASC');
        return $qb
            ->getQuery()
            ->getResult()
            ;*/
        /*$rsm = new ResultSetMapping();
        $rsm->addEntityResult('Users', 'u');
        $rsm->addFieldResult('u', 'username', 'username');
        $rsm->addFieldResult('u', 'id', 'id');
        $rsm->addFieldResult('u', 'enabled', 'enabled');
        $query = $this->_em->createNativeQuery('SELECT * FROM tfe_users ORDER BY username ASC', $rsm);

          $query = $entityManager->createNativeQuery

        // Utilisation de getSingleResult car la requête ne doit retourner qu'un seul résultat
        return $query->getResult();

        /*$userManager     = $this->getDoctrine()->getManager();
        $sql = "SELECT  * FROM tfe_users ORDER BY username ASC";
        $users = $userManager->getConnection()->prepare($sql);$users->execute();*/
    }
    public function GetNbUsers($em)
    {
        $rsm = new ResultSetMapping($em);
// build rsm here

        $query = "SELECT COUNT(*) FROM tfe_users";
        $query = $em->createNativeQuery($query, $rsm);
        return $query
            ->getResult();
    }
}
